

<fn dispatcher [-callee -types:Mem-Types] # NOTE: specifying correct type T for callee would create a cycle.
    <if (ine (mlen types) 1)
      (error "dispatcher requires 1 argument")>
    <let T0 (el types 0)>
    <if
      (is T0 Sym) <fn a [-obj:Sym]    (outRSL `Sym obj)>
      (is T0 Int) <fn a [-obj:Int]    (outRSL `Int obj)>
      (is T0 Data) <fn a [-obj:Data]  (outRSL `Data obj)>
      (error "dispatcher cannot handle type")>>

<let T {:Type
  `T
  {:Type-kind-struct
    {:Mem-Par}
    dispatcher}}>

<let i {:T}>
(i `s)
(i 1)
(i "hi")
(i T)
